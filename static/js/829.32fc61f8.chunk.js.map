{"version":3,"file":"static/js/829.32fc61f8.chunk.js","mappings":"qPAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAEaC,EAAe,mCAAG,WAAMC,GAAN,kFACvBC,EADuB,gBACND,EADM,4BAFnB,oCAEmB,SAENF,EAAAA,EAAAA,IAAUG,GAFJ,uBAErBC,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,2CAAH,sD,oCCJ5B,EAA4B,2BAA5B,EAA8D,sBAA9D,EAA6F,wB,SCK9E,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QAiBR,OAfAY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdL,GAAW,GAFG,SAGYT,EAAgBC,GAH5B,gBAGNc,EAHM,EAGNA,QACRR,EAAWQ,GAJG,gDAMdJ,EAAS,EAAD,IANM,yBAQdF,GAAW,GARG,4EAAH,qDAWfK,GACD,GAAE,CAACb,KAGF,iBAAKe,UAAWC,EAAhB,UACGT,IAAW,SAAC,IAAD,IACXE,IAAS,uBAAG,oBACZJ,EAAQY,OAAS,GAChB,+BACE,eAAIF,UAAWC,EAAf,SACGX,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,cAAGN,UAAWC,EAAd,SAA8BI,KAC9B,uBAAIC,MAFGF,EADE,SASjB,uBAAG,+CAIV,C","sources":["API/get-movie-reviews.jsx","pages/Reviews/Reviews.module.css","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'c850ec5ba16f4b711da56dfde72a63cf';\n\nexport const getMovieReviews = async movieId => {\n  const query = `movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(query);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__rhKnN\",\"list\":\"Reviews_list__pCzae\",\"author\":\"Reviews_author__Y70Lx\"};","import { getMovieReviews } from '../../API/get-movie-reviews';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport styles from './Reviews.module.css';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReview = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getReview();\n  }, [movieId]);\n\n  return (\n    <div className={styles.container}>\n      {loading && <Loader />}\n      {error && <p>Something wrong</p>}\n      {reviews.length > 0 ? (\n        <>\n          <ul className={styles.list}>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <p className={styles.author}>{author}</p>\n                <p>{content}</p>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n"],"names":["axios","getMovieReviews","movieId","query","data","Reviews","useState","reviews","setReviews","loading","setLoading","error","setError","useParams","useEffect","getReview","results","className","styles","length","map","id","author","content"],"sourceRoot":""}